[{"C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\index.js":"1","C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\App.js":"2","C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\serviceWorker.js":"3","C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\utils\\theme.js":"4","C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\utils\\constants.js":"5","C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\components\\Footer.js":"6","C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\components\\DeleteModal.js":"7","C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\components\\axiosComponent.js":"8","C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\components\\Header.js":"9","C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\components\\EditModal.js":"10","C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\components\\AddModal.js":"11","C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\components\\viewcorrespondance.js":"12","C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\components\\drpcomp.js":"13"},{"size":776,"mtime":1616222078000,"results":"14","hashOfConfig":"15"},{"size":3136,"mtime":1616652680287,"results":"16","hashOfConfig":"15"},{"size":5226,"mtime":1612270976000,"results":"17","hashOfConfig":"15"},{"size":475,"mtime":1612270978000,"results":"18","hashOfConfig":"15"},{"size":144,"mtime":1616382670151,"results":"19","hashOfConfig":"15"},{"size":1243,"mtime":1612270978000,"results":"20","hashOfConfig":"15"},{"size":2870,"mtime":1616382587524,"results":"21","hashOfConfig":"15"},{"size":6186,"mtime":1616389879270,"results":"22","hashOfConfig":"15"},{"size":1417,"mtime":1616373371535,"results":"23","hashOfConfig":"15"},{"size":4480,"mtime":1616382614244,"results":"24","hashOfConfig":"15"},{"size":5518,"mtime":1616382555871,"results":"25","hashOfConfig":"15"},{"size":3117,"mtime":1616368157405,"results":"26","hashOfConfig":"15"},{"size":1344,"mtime":1616368125397,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"1dsa9nn",{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\index.js",["61","62"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport theme from '../src/utils/theme';\r\nimport { withStyles, MuiThemeProvider } from '@material-ui/core/styles';\r\nReactDOM.render(\r\n    <MuiThemeProvider theme={theme}>\r\n      <App />\r\n    </MuiThemeProvider>,\r\n  document.getElementById('root')\r\n);\r\n/*\r\nCRACKED BY ILLUMINATI\r\nTRUST US AND UNCOMMENT THIS CODE ONCE YOU SETUP YOUR REDUX STORE ;-)\r\n ReactDOM.render(\r\n   <Provider store={store}>\r\n     <MuiThemeProvider theme={theme}>\r\n       <App />\r\n     </MuiThemeProvider>\r\n   </Provider>,\r\n   document.getElementById('root')\r\n );\r\n*/\r\nserviceWorker.unregister();\r\n\r\n\r\n",["63","64"],"C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\App.js",["65","66","67"],"import React from 'react';\r\nimport './App.css';\r\nimport theme from '../src/utils/theme';\r\nimport { makeStyles } from '@material-ui/core';\r\n//import CollectorDashboard from '../src/views/CollectorDashboard';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { ROLL_NUMBER } from '../src/utils/constants';\r\nimport Table_data from \"../src/components/axiosComponent\"\r\nimport SimpleAppBar from \"./components/Header\";\r\nimport Footer from \"./components/Footer\"\r\nimport AlertDialog from './components/DeleteModal';\r\nimport FormDialog from './components/AddModal';\r\nimport FormDialog1 from \"./components/EditModal\"\r\n//import SearchBar from './components/SearchBar';\r\nimport Correspondance from \"./components/viewcorrespondance\";\r\nimport Button from '@material-ui/core/Button';\r\nimport setSearchterm from \"../src/components/axiosComponent\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  '@global': {\r\n    '*::-webkit-scrollbar': {\r\n      width: '0.4em',\r\n      height: '0.4em',\r\n    },\r\n    '*::-webkit-scrollbar-track': {\r\n      '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.00)',\r\n    },\r\n    '*::-webkit-scrollbar-thumb': {\r\n      backgroundColor: '#6D7183',\r\n      outline: '1px solid slategrey',\r\n    },}\r\n}));\r\nconst styles = theme => ({\r\n  mainBackground: {\r\n    //background: theme.palette.primary.main,\r\n    height: '100vh',\r\n    width: '100vw',\r\n    overflow: 'hidden',\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  }\r\n});\r\nconst App = () => {\r\n  console.log('theme', theme);\r\n  //const classes = useStyles();\r\n  return (\r\n    <div style={{backgroundColor:\"#46566c\"}}>\r\n      \r\n      <Router basename={`/${ROLL_NUMBER}`}>\r\n      <Route exact path=\"/\" component={SimpleAppBar} />\r\n      <div >\r\n      <Button style={{backgroundColor:\"#14AFF1\",border:\"1px solid #14AFF1\",height:\"1.8rem\",fontSize:\".7rem\",color:\"#fff\",margin:\"1.5vh\"}} >Predict</Button>\r\n      <Route exact path=\"/\" component={Correspondance} />\r\n      <Route exact path=\"/\" component={FormDialog} />\r\n      <Route exact path=\"/\" component={FormDialog1} />\r\n      <Route exact path=\"/\" component={AlertDialog} />\r\n      <>\r\n        <input style={{backgroundColor:\"#283A46\",border:\"1px solid #14AFF1\",borderRadius:\"5px\",height:\"1.5rem\",width:\"15rem\",fontSize:\".7rem\",color:\"#FFFFFF\",margin:\"1.5vh\",top: \"355px\",marginLeft:\"45rem\",}}type=\"text\" placeholder=\"Search By Invoice Number\" onChange={(event)=>{setSearchterm(event.target.value);}} />\r\n      </>\r\n      </div>\r\n      <div >\r\n        <Route exact path=\"/\" component={Table_data} />\r\n      </div>\r\n      <div>\r\n        <Route exact path=\"/\" component={Footer} />\r\n      </div>\r\n        \r\n      </Router>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\n    \r\nexport default App;\r\n\r\n/*return (<div><Router basename={`/${ROLL_NUMBER}`}>\r\n        <Route exact path=\"/\" component={CollectorDashboard} />\r\n      </Router> <Route exact path=\"/\" component={SimpleAppBar} />\r\n      <Route exact path=\"/\" component={Footer} />\r\n      className={classes.mainBackground}\r\n      <Route exact path=\"/\" component={SearchBar} />\r\n      <Table_data /></div>)*/\r\n","C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\serviceWorker.js",[],"C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\utils\\theme.js",[],"C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\utils\\constants.js",[],"C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\components\\Footer.js",["68","69","70"],"import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport theme, { pxToRem } from '../utils/theme';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Typography, Grid } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  mainBackground: {\r\n    background: theme.palette.primary.main,\r\n    height: '100vh',\r\n    width: '100vw'\r\n  },\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: '100%',\r\n    background: '#252C48',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column'\r\n  },\r\n  titleName: { fontSize: pxToRem(30), color: 'white' },\r\n  subTitleName: {\r\n    fontSize: pxToRem(20),\r\n    color: 'white'\r\n  }\r\n});\r\nfunction Footer(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <Grid\r\n      item\r\n      xs={12}\r\n      style={{\r\n        display: 'flex',\r\n        marginRight: '5px',\r\n        justifyContent: 'flex-end',\r\n        height: \"4.5vh\",\r\n        alignItems: \"flex-end\"\r\n      }}\r\n    >\r\n      <Typography style={{ color: 'white' }}>\r\n        Copyright 2020 Highradius. All Rights Reserved.\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Footer);\r\n","C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\components\\DeleteModal.js",["71","72"],"import React, { useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport axios from 'axios';\r\nimport Table_data from './axiosComponent';\r\n\r\n\r\nconst deleteTheme={\r\n    but:{\r\n      backgroundColor:\"#273D49\",\r\n      border:\"1px solid #14AFF1\",\r\n      height:\"1.8rem\",\r\n      fontSize:\".7rem\",\r\n      color:\"#fff\",\r\n      margin:\"1.5vh\"\r\n    },\r\n    but1:{\r\n      backgroundColor:\"#14AFF1\",\r\n      border:\"1px solid #14AFF1\",\r\n      height:\"1.8rem\",\r\n      fontSize:\".7rem\",\r\n      color:\"#fff\",\r\n    }    \r\n}\r\n\r\n\r\nvar data;\r\n export const Tempcomponent=(props)=>{\r\n\r\n  data=props;\r\n  return(props);\r\n}\r\n\r\nconst AlertDialog=()=> {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n  \r\n \r\n  const Delete=()=>{\r\n   let len=data.length;\r\n   let ids=data\r\n  for(let i=0;i<len;i++){\r\n    axios\r\n    .get(`http://localhost:8080/1805054/DeleteServlet?doc_id=${ids[i]}`)\r\n    .then((response) => {\r\n      console.log(response);\r\n      if(response.data==0){\r\n      alert(\"cannot delete row\")}\r\n      else{alert(\"row deleted\")}\r\n\r\n      handleClose();\r\n      Table_data();\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n  })}}\r\n \r\n\r\n  return (\r\n    <>\r\n      <Button style={deleteTheme.but} onClick={handleClickOpen} >- Delete</Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle  style={{backgroundColor:\"#2A3E4C\",color:\"#fff\"}} id=\"alert-dialog-title\">Delete Record(s)?\r\n        <CloseIcon style={{position:\"absolute\",right:\"1rem\",color:\"#97A1A9\"}} onClick={handleClose}/>\r\n        </DialogTitle>\r\n        <DialogContent style={{backgroundColor:\"#2A3E4C\"}}>\r\n          <DialogContentText style={{color:\"#C0C6CA\"}} id=\"alert-dialog-description\">\r\n          You'll lose your record(s) after this action. We can't recover them once you delete.<br/><br/>\r\n          Are you sure you want to <span style={{color:\"red\"}}>permanently delete</span> them?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions style={{backgroundColor:\"#2A3E4C\"}}>\r\n          <Button onClick={handleClose} style={deleteTheme.but}>Cancel</Button>\r\n          <Button onClick={Delete} style={deleteTheme.but1} >Delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AlertDialog;\r\n\r\n\r\n","C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\components\\axiosComponent.js",["73","74","75","76","77","78","79","80"],"import React, { useEffect } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport polygon2 from \"../assets/polygon2.svg\"\r\nimport polygon1 from \"../assets/polygon1.svg\"\r\nimport axios from \"axios\";\r\nimport searchLogo from \"../assets/searchLogo.svg\";\r\nimport { CheckRounded } from '@material-ui/icons';\r\nimport {Tempcomponent} from \"./DeleteModal\";\r\nimport {Edit} from \"./EditModal\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '7vw',\r\n    Height:\"5vh\",\r\n    align: \"center\",\r\n    margin:\"auto auto\",\r\n    overflow: 'auto', \r\n  },\r\n  table: {\r\n    minWidth: '70vw',\r\n   \r\n  },\r\n  center: {\r\n    margin: \"auto\",\r\n   width: \"50vw\",\r\n   border: \"3px solid green\",\r\n   padding: \"10px\",\r\n   \r\n  },\r\n  bar: {\r\n    backgroundImage:`url=(${searchLogo})`,\r\n    backgroundRepeat:\"no-repeat\",\r\n    backgroundPosition: 'right',\r\n    margin:\".5rem\",\r\n    borderRadius:\".3rem\",\r\n    backgroundColor:\"#273D49\",\r\n    padding:\"0.4rem\",\r\n    border:\"1px solid #14AFF1\",\r\n    width:\"15rem\",\r\n    margin:\"15px\"\r\n   }\r\n\r\n});\r\nfunction Table_data() {\r\n    let [responseData, setResponseData] = React.useState([]);\r\n    let [isNext, isNextFunc] = React.useState(false);\r\n    let [pageCount, setCount] = React.useState(1);\r\n    var [data_arr, setData]=React.useState([]);\r\n    var [searchterm,setSearchterm]=React.useState('');\r\n    var[search,setSearch]=React.useState(false)\r\n    \r\n    const fetchData = () => {\r\n      setTimeout(function(){ \r\n        let limit=50;\r\n        axios  \r\n          .get(\r\n            `http://localhost:8080/1805054/TableRetrieval?page=${pageCount}&limit=${limit}`)//&limit=10page=${pageCount}&limit=10\r\n          .then((response) => {\r\n            console.log(response);\r\n            console.log(pageCount);\r\n            setCount(pageCount + 1);\r\n            setResponseData([...responseData, ...response.data]);\r\n            isNextFunc(true);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n        },50)\r\n    };\r\n    function fetchMoreData() {\r\n      if(pageCount<5001){\r\n        fetchData();\r\n      }\r\n      else{\r\n        isNextFunc(false);  \r\n      } \r\n    }\r\n   \r\n   useEffect(() => {\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n   function checked(docid){\r\n     let newdata=data_arr\r\n     if(newdata.includes(docid)){\r\n       var index=newdata.indexOf(docid);\r\n       newdata.splice(index,1);}\r\n     else{newdata.push(docid);}\r\n     setData(newdata);\r\n   }\r\n   \r\n    return (\r\n      <div>\r\n      <div className={styles.center} >\r\n        <InfiniteScroll\r\n          dataLength={responseData.length}\r\n          next={fetchMoreData}\r\n          hasMore={isNext}\r\n          loader={\r\n            <div\r\n              style={{ height: \"80%\", paddingLeft: \"35%\", overflow: \"hidden\", align:\"center\"}}\r\n            ><p>...PLEASE WAIT...</p>\r\n              <CircularProgress />\r\n            </div>\r\n          }\r\n        \r\n          \r\n        >\r\n        \r\n        <TableContainer component={Paper}>\r\n        <Paper className={styles.root}  >\r\n        <Table  className={styles.root}>\r\n\r\n          \r\n          <TableHead display=\"block\" position=\"sticky\" style={{backgroundColor:'#273D49CC'}}>\r\n            <TableRow >\r\n            <TableCell padding=\"checkbox\" ><Checkbox style={{color:\"#97A1A9\"}}/></TableCell>\r\n             <TableCell align=\"left\">Customer Name</TableCell>\r\n              <TableCell align=\"left\">Customer number</TableCell>\r\n              <TableCell align=\"left\">Bill_number</TableCell>\r\n              <TableCell align=\"left\">Bill_amount\r\n              <img style={{position:\"relative\",bottom:\".5rem\",left:\".7rem\"}} src={polygon2} alt=\"Polygon 2\"/>\r\n              <img src={polygon1} alt=\"Polygon 1\"/></TableCell>\r\n              <TableCell align=\"left\">Due Date\r\n            <img style={{position:\"relative\",bottom:\".5rem\",left:\".7rem\"}} src={polygon2} alt=\"Polygon 2\"/>\r\n            <img src={polygon1} alt=\"Polygon 1\"/>\r\n            </TableCell>\r\n              <TableCell align=\"left\">Predicted Payment Date</TableCell>\r\n              <TableCell align=\"left\">Predicted aging bucket</TableCell>\r\n              <TableCell align=\"left\">notes</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n       \r\n          {responseData.filter((data)=>{\r\n            if(searchterm==\"\"){\r\n              return data}\r\n            else if(data.doc_id.includes(searchterm)){\r\n              return data\r\n            }\r\n          }).map((data => (\r\n              <TableRow key={data.doc_id}>\r\n                <TableCell padding=\"checkbox\" onClick={()=>{checked(data.doc_id);Tempcomponent(data_arr);Edit(data_arr);}} style={{backgroundColor:'#273D49CC'}}><Checkbox style={{color:\"#97A1A9\"}}/></TableCell>\r\n                <TableCell style={{backgroundColor:'#273D49CC'}}>{data.name_customer}</TableCell>\r\n                <TableCell style={{backgroundColor:'#273D49CC'}}>{data.cust_number}</TableCell>\r\n                <TableCell style={{backgroundColor:'#273D49CC'}}>{data.invoice_id}</TableCell>\r\n                <TableCell style={{backgroundColor:'#273D49CC'}}>{data.total_open_amount}</TableCell>\r\n                <TableCell style={{backgroundColor:'#273D49CC'}}>{data.due_in_date}</TableCell>\r\n                <TableCell style={{backgroundColor:'#273D49CC'}}>{}</TableCell>\r\n                <TableCell style={{backgroundColor:'#273D49CC'}}>{}</TableCell>\r\n                <TableCell style={{backgroundColor:'#273D49CC'}}>{data.notes}</TableCell>\r\n              </TableRow>\r\n            )))}\r\n          \r\n        </TableBody>\r\n        </Table>\r\n        </Paper>\r\n        </TableContainer>\r\n        </InfiniteScroll>\r\n       </div>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n  \r\n  export default Table_data;\r\n ","C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\components\\Header.js",[],"C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\components\\EditModal.js",["81","82","83"],"import React, { useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport editLogo from \"../assets/editLogo.svg\"\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport axios from 'axios';\r\n\r\n\r\nconst styles={\r\n  but:{\r\n    backgroundColor:\"#273D49\",\r\n    border:\"1px solid #14AFF1\",\r\n    height:\"1.8rem\",\r\n    fontSize:\".7rem\",\r\n    margin:\"1rem\",\r\n    color:\"#fff\"\r\n  },\r\n  but1:{\r\n    backgroundColor:\"#14AFF1\",\r\n    border:\"1px solid #14AFF1\",\r\n    height:\"1.8rem\",\r\n    fontSize:\".7rem\",\r\n    color:\"#fff\"\r\n  },\r\n  text1:{\r\n    position:\"relative\",\r\n    bottom:\"1.5rem\",\r\n    left:\"1.1rem\",\r\n    border:\"1px solid #356680\"\r\n    \r\n  },\r\n  text2:{\r\n    outline:\"none\",\r\n    boxShadow:\"none\",\r\n    position:\"relative\",\r\n    bottom:\"1.5rem\",\r\n    left:\"6rem\",\r\n    border:\"1px solid #356680\",\r\n    height:\"10rem\"\r\n  }\r\n}\r\n\r\nvar global;\r\n export function Edit(props) {\r\n \r\n  global = props;\r\n  return (<div>{console.log(props)}</div>);\r\n}\r\n\r\n const FormDialog1=()=>{\r\n  const [open, setOpen] = React.useState(false);\r\n  const [invamt,setInvamt]=React.useState('');\r\n  const [Notes,setNotes]=React.useState('');\r\n  const inpt=useRef(null)\r\n  const handleOpen = () => {\r\n    if(global.length>1){alert(\"only 1 value allowed\")}\r\n    else if(global.length==0){alert(\"only 1 value allowed\")}\r\n    else{\r\n    setOpen(true);}\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleInvamt=(event) => \r\n  {\r\n       setInvamt(event.target.value)\r\n  }\r\n  const handleNotes1 =(event) =>\r\n  {\r\n    setNotes(event.target.value)\r\n  }\r\n  const handleReset= (event) =>\r\n  {\r\n       setNotes('');\r\n       setInvamt('');\r\n  }\r\n  const handleSubmit =(event) =>\r\n  { \r\n    let docid=global;\r\n    event.preventDefault();\r\n    axios.get(`http://localhost:8080/1805054/EditServlet?docid=${docid[0]}&iamount=${invamt}&notes=${Notes}`)\r\n    .then((response) => {\r\n      console.log(response);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  \r\n\r\n    return (\r\n      <>\r\n        <Button style={{backgroundColor:\"#273D49\",border:\"1px solid #14AFF1\",height:\"1.8rem\",fontSize:\".7rem\",color:\"#fff\",margin:\"1.5vh\"}} onClick={handleOpen}>\r\n        <img style={{width:\".7rem\",margin:\".3rem\"}} src={editLogo} alt=\"Edit Logo\"/>Edit</Button>\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle style={{backgroundColor:\"#2A3E4C\",color:\"#fff\"}} id=\"form-dialog-title\">Edit Invoice\r\n          <CloseIcon style={{position:\"absolute\",right:\"1rem\",color:\"#97A1A9\"}} onClick={handleClose}/>\r\n          </DialogTitle>\r\n          <DialogContent style={{backgroundColor:\"#2A3E4C\"}}>\r\n            \r\n          <span style={{color:\"#97A1A9\"}}>Invoice Amounts</span>\r\n             <TextField\r\n              className={styles.text1}\r\n              required\r\n              id=\"outlined-bare\"\r\n              type=\"number\"\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              onChange={handleInvamt}\r\n            />\r\n            <br/>\r\n            <span style={{color:\"#97A1A9\"}}>Notes</span>\r\n            <TextField\r\n               className={styles.text2}\r\n               id=\"outlined-with-placeholder\"\r\n               margin=\"normal\"\r\n               variant=\"outlined\"\r\n               onChange={handleNotes1}\r\n            />\r\n          \r\n          </DialogContent>\r\n          <DialogActions style={{backgroundColor:\"#2A3E4C\",display:\"flex\"}}>\r\n            <div style={{flex:\"1\"}}>\r\n            <Button className={styles.but} onClick={handleClose} color=\"primary\">Cancel</Button>\r\n            </div>\r\n            <div style={{justifyContent:\"flex-end\"}}>\r\n            <Button className={styles.but} onClick={handleReset} color=\"primary\">Reset</Button>\r\n            <Button className={styles.but1} onClick={handleSubmit} color=\"primary\">Save</Button>\r\n            </div>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\nFormDialog1.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default FormDialog1;\r\n","C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\components\\AddModal.js",[],"C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\components\\viewcorrespondance.js",[],"C:\\Users\\KIIT\\Desktop\\M2_Ritu\\Summer_Internship_UI\\src\\components\\drpcomp.js",[],{"ruleId":"84","severity":1,"message":"85","line":6,"column":10,"nodeType":"86","messageId":"87","endLine":6,"endColumn":18},{"ruleId":"84","severity":1,"message":"88","line":8,"column":10,"nodeType":"86","messageId":"87","endLine":8,"endColumn":20},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"84","severity":1,"message":"93","line":6,"column":42,"nodeType":"86","messageId":"87","endLine":6,"endColumn":48},{"ruleId":"84","severity":1,"message":"94","line":20,"column":7,"nodeType":"86","messageId":"87","endLine":20,"endColumn":16},{"ruleId":"84","severity":1,"message":"95","line":34,"column":7,"nodeType":"86","messageId":"87","endLine":34,"endColumn":13},{"ruleId":"84","severity":1,"message":"96","line":2,"column":8,"nodeType":"86","messageId":"87","endLine":2,"endColumn":13},{"ruleId":"84","severity":1,"message":"97","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":13},{"ruleId":"84","severity":1,"message":"98","line":32,"column":11,"nodeType":"86","messageId":"87","endLine":32,"endColumn":18},{"ruleId":"84","severity":1,"message":"99","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"100","severity":1,"message":"101","line":59,"column":23,"nodeType":"102","messageId":"103","endLine":59,"endColumn":25},{"ruleId":"84","severity":1,"message":"104","line":16,"column":10,"nodeType":"86","messageId":"87","endLine":16,"endColumn":22},{"ruleId":"105","severity":1,"message":"106","line":49,"column":5,"nodeType":"107","messageId":"103","endLine":49,"endColumn":11},{"ruleId":"84","severity":1,"message":"108","line":58,"column":21,"nodeType":"86","messageId":"87","endLine":58,"endColumn":34},{"ruleId":"84","severity":1,"message":"109","line":59,"column":9,"nodeType":"86","messageId":"87","endLine":59,"endColumn":15},{"ruleId":"84","severity":1,"message":"110","line":59,"column":16,"nodeType":"86","messageId":"87","endLine":59,"endColumn":25},{"ruleId":"111","severity":1,"message":"112","line":90,"column":5,"nodeType":"113","endLine":90,"endColumn":7,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":144,"column":38,"nodeType":"117","messageId":"118","endLine":144,"endColumn":40},{"ruleId":"100","severity":1,"message":"101","line":145,"column":26,"nodeType":"102","messageId":"103","endLine":145,"endColumn":28},{"ruleId":"84","severity":1,"message":"88","line":4,"column":10,"nodeType":"86","messageId":"87","endLine":4,"endColumn":20},{"ruleId":"84","severity":1,"message":"119","line":60,"column":9,"nodeType":"86","messageId":"87","endLine":60,"endColumn":13},{"ruleId":"100","severity":1,"message":"101","line":63,"column":26,"nodeType":"102","messageId":"103","endLine":63,"endColumn":28},"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","'withStyles' is defined but never used.","no-native-reassign",["120"],"no-negated-in-lhs",["121"],"'Switch' is defined but never used.","'useStyles' is assigned a value but never used.","'styles' is assigned a value but never used.","'Paper' is defined but never used.","'theme' is defined but never used.","'classes' is assigned a value but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CheckRounded' is defined but never used.","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","'setSearchterm' is assigned a value but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["122"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'inpt' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},"Update the dependencies array to be: [fetchData]",{"range":"125","text":"126"},[2679,2681],"[fetchData]"]